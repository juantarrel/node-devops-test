# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: CloudFormationCreateOrUpdateStack@1
      inputs:
        awsCredentials: 'Aws ambryhill test'
        regionName: 'us-east-1'
        stackName: 'stack-ah-prod-$(tag)'
        templateSource: 's3'
        s3BucketName: 'ambryhill-cf'
        s3ObjectKey: 'prod-2020-05-31.json'
        templateParametersSource: 'inline'
        templateParameters: |
          -
            ParameterKey: 'AZs'
            ParameterValue: 'us-east-1d, us-east-1a'
          -
            ParameterKey: 'InstanceCount'
            ParameterValue: '2'
          -
            ParameterKey: 'Subnets'
            ParameterValue: 'subnet-09956b30369a7c713, subnet-0cf3a8c9703dc2ca3'
          -
            ParameterKey: 'VpcId'
            ParameterValue: 'vpc-02777bc8e193269b2'
          -
            ParameterKey: 'KeyName'
            ParameterValue: 'key_ambryhill_prod'
          -
            ParameterKey: 'InstanceType'
            ParameterValue: 't2.micro'
    - task: Docker@2
      inputs:
        repository: 'ah-base'
        command: 'build'
        Dockerfile: 'Dockerfile'
        arguments: '--build-arg APP_DOMAIN=PRODUCTION'
    - task: ECRPushImage@1
      inputs:
        awsCredentials: 'Aws ambryhill test'
        regionName: 'us-east-1'
        imageSource: 'imageid'
        sourceImageId: 'ah-base:$(tag)'
        repositoryName: 'prod-ambryhill-app'
        pushTag: '$(Build.BuildId)'

    - task: AWSShellScript@1
      inputs:
        awsCredentials: 'Aws ambryhill test'
        regionName: 'us-east-1'
        arguments: ''
        scriptType: 'inline'
        inlineScript: |
          aws ecs register-task-definition --family ah_prod --container-definitions "
              [
                 {
                    \"name\":\"app\",
                    \"image\":\"207155759131.dkr.ecr.us-east-1.amazonaws.com/prod-ambryhill-app:$(tag)\",
                    \"cpu\":256,
                    \"memory\":256,
                    \"essential\":true,
                    \"portMappings\":[
                       {
                          \"containerPort\":80,
                          \"hostPort\":80
                       },
                       {
                          \"containerPort\":443,
                          \"hostPort\":443
                       }
                    ],
                    \"environment\":[
                       {
                        \"name\": \"conf\",
                        \"value\": \"prod\"
                        },
                       {
                          \"name\":\"env\",
                          \"value\":\"prod\"
                       }
                    ]
                 }
              ]" > revision.txt
          cat revision.txt | grep revision | awk '{print $2}' | sed 's/,/ /g' > Prod-$(tag).txt
          TASK_DEFINITION=`cat Prod-$(tag).txt`
          aws ecs update-service --cluster ah_prod --service nodec --task-definition ah_prod:$(TASK_DEFINITION)
        failOnStandardError: true
