trigger:
- master

resources:
- repo: self

variables:
  envAH: 'prod'
  buildId: '$(Build.BuildId)'
  theAwsCredentials: 'Aws ambryhill test'
  stackPrefix: 'elb-ah-prod'
  # S3 for CloudFormation template
  s3Bucket: 'ambryhill-cf'
  s3BucketObjKey: 'prod-2020-05-31.json'
  # CloudFormation params
  cfRegionName: 'us-east-1'
  cfAZs: 'us-east-1d, us-east-1a'
  cfInstanceCount: '2'
  cfSubnets: 'subnet-09956b30369a7c713, subnet-0cf3a8c9703dc2ca3'
  cfVpcId: 'vpc-02777bc8e193269b2'
  cfKeyName: 'key_ambryhill_prod'
  cfInstanceType: 't2.micro'
  # docker build
  dockerBase: 'ah-base'
  dockerArgs: '--build-arg APP_DOMAIN=PRODUCTION'
  # ECR for repository
  ecrRepositoryName: 'prod-ambryhill-app'
  # Orchestrator ECS
  ecsTask: 'ah_prod'
  # Docker containers
  ecs1Name: 'app'
  ecs1Image: '207155759131.dkr.ecr.us-east-1.amazonaws.com/prod-ambryhill-app:$(buildId)'
  ecs1Cpu: '256'
  ecs1Memory: '256'
  # Orchestrator ECS service and cluster
  ecsCluster: 'ah_prod'
  ecsService: 'nodec'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'             
    - task: CmdLine@2
      inputs:
        script: 'sudo apt install python3-pip && pip3 install boto3'
    - task: CloudFormationCreateOrUpdateStack@1
      inputs:
        awsCredentials: '$(theAwsCredentials)'
        regionName: '$(cfRegionName)'
        stackName: '$(stackPrefix)-$(buildId)'
        templateSource: 's3'
        s3BucketName: '$(s3Bucket)'
        s3ObjectKey: '$(s3BucketObjKey)'
        templateParametersSource: 'inline'
        templateParameters: |
          -
            ParameterKey: 'AZs'
            ParameterValue: '$(cfAZs)'
          -
            ParameterKey: 'InstanceCount'
            ParameterValue: '$(cfInstanceCount)'
          -
            ParameterKey: 'Subnets'
            ParameterValue: '$(cfSubnets)'
          -
            ParameterKey: 'VpcId'
            ParameterValue: '$(cfVpcId)'
          -
            ParameterKey: 'KeyName'
            ParameterValue: '$(cfKeyName)'
          -
            ParameterKey: 'InstanceType'
            ParameterValue: '$(cfInstanceType)'
    